---
import {
  getLangFromUrl,
  useTranslatedPath,
  useTranslations,
} from "@i18n/utils";
import { Icon } from "astro-icon/components";
import { getRefConfig } from "../../referentiel-config";
import LanguagePicker from "./LanguagePicker.astro";
import Search from "./SearchInt.astro";

const { classes, repoURL } = Astro.props;
const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);
const translatePath = useTranslatedPath(lang);
---

<header
  class:list={[
    "sticky top-0 z-20 flex min-h-[80px] border-b-2 border-neutral-light bg-neutral px-4 lg:px-0",
    classes,
  ]}
>
  <div
    class="mx-auto flex w-full flex-row items-center justify-between lg:max-w-5xl"
  >
    <div class="flex items-center gap-4">
      {/* logo home */}
      <div>
        <a
          href={translatePath("")}
          class="text-inherit text-white no-underline"
          title={t("Retour à l'accueil")}
        >
          <span class="font-normal">
            {t("seo.site_name")}
          </span>
          <br />
          <span class="text-xl font-bold leading-none">
            {
              getRefConfig(
                import.meta.env.PUBLIC_REF_NAME || process.env.PUBLIC_REF_NAME,
              ).i18n.refTitles[lang]["short"]
            }{
              import.meta.env.MODE === "development" && (
                <span class="text-white"> ({lang})</span>
              )
            }
            {" "}
            <span class="text-sm">
              {getRefConfig().refInformations.currentVersion}
            </span>
          </span>
        </a>
      </div>
    </div>
    {/* menu */}
    <nav aria-label="Navigation principale" class="flex items-center">
      <ul
        class="menu fixed right-0 top-0 z-50 hidden flex-col gap-4 bg-primary px-10 py-16 lg:relative lg:m-0 lg:flex lg:flex-row lg:items-center lg:bg-transparent lg:p-0"
      >
        <li class="z-90 fixed right-5 top-3 lg:hidden">
          <button data-menu-button class="text-right text-4xl text-white">
            &times;
          </button>
        </li>
        <li class="!m-0">
          <a
            href={translatePath("/fiches.html")}
            class={`text-white text-xl lg:text-base no-underline text-inherit font-medium`}
            title={t("Consulter les Bonnes pratiques")}
          >
            {t("Bonnes pratiques")}
          </a>
        </li>
        {
          getRefConfig(
            import.meta.env.PUBLIC_REF_NAME || process.env.PUBLIC_REF_NAME,
          ).featuresEnabled.lexique && (
            <li class="!m-0">
              <a
                href={translatePath("/lexique.html")}
                class={`text-xl font-medium text-inherit text-white no-underline lg:text-base`}
                title={t("Consulter le Lexique")}
              >
                {t("Lexique")}
              </a>
            </li>
          )
        }

        {
          /*
        <li class="!m-0 lg:hidden">
          <a
          href={translatePath("/personas/")}
          class={`text-white text-xl lg:text-base no-underline text-inherit font-medium`}
          title={t("Consulter les Personas")}
          >
          {t("Personas")}
        </a>
      </li>
          */
        }
        <li
          class={`!m-0 border border-primary-focus lg:border-zinc-200 lg:h-7`}
        >
        </li>
        <li class="!m-0">
          <a
            href={`${repoURL}/blob/main/CONTRIBUTING.md`}
            class={`text-white text-xl lg:text-base text-inherit font-medium inline-flex gap-[.15rem] items-center no-underline`}
            target="_blank"
            rel="noreferrer"
            title={t("Voir la méthode de contribution sur le GitHub du CNUMR")}
          >
            {t("Contribuez !")}
          </a>
        </li>
        <li class="!m-0">
          <a
            href={repoURL}
            class={`text-white text-xl lg:text-base no-underline text-inherit font-medium inline-flex gap-[.15rem] items-center`}
            target="_blank"
            rel="noreferrer"
            title={t("Voir le repository GitHub de CNUMR")}
            aria-label={t("Voir le repository GitHub de CNUMR")}
          >
            <Icon
              name="tabler:brand-github-filled"
              width={16}
              height={16}
              aria-hidden="true"
            />
          </a>
        </li>
        <li class="!m-0">
          <LanguagePicker style="dark" />
        </li>
      </ul>
      {/* mobile bt */}[
      <button data-menu-button class="text-3xl text-white lg:hidden">
        &#9776;
      </button>
    </nav>
  </div>
</header>
<Search id="search" className="pagefind-ui" uiOptions={{ showImages: false }} />
<script>
  function toggleMenu() {
    const menu = document.querySelector(".menu");
    if (!menu) return null;
    if (menu && menu.classList.contains("hidden")) {
      menu.classList.remove("hidden");
      menu.classList.add("flex");
    } else {
      menu.classList.remove("flex");
      menu.classList.add("hidden");
    }
  }
  const buttons = document.querySelectorAll("[data-menu-button]");
  buttons.forEach((button) => {
    button.addEventListener("click", () => toggleMenu());
  });
</script>
<style is:global>
  /* nav {
    display: grid;
    place-items: center;
  } */

  .pagefind-ui {
    --pagefind-ui-scale: 0.75;
    --pagefind-ui-primary: navy;
    --pagefind-ui-text: black;
    --pagefind-ui-border: slategrey;
    --pagefind-ui-border-width: 1px;
    --pagefind-ui-border-radius: 0.25rem;
    --pagefind-ui-font: sans-serif;

    /* width: 50%; */
    @apply container mx-auto lg:max-w-5xl;
  }

  .pagefind-ui.yellow {
    --pagefind-ui-background: lightyellow;
  }

  .pagefind-ui.red {
    --pagefind-ui-background: peachpuff;
    width: 100%;
  }

  .pagefind-ui .pagefind-ui__drawer:not(.pagefind-ui__hidden) {
    position: absolute;
    left: 0;
    right: 0;
    margin-top: 0px;
    z-index: 9999;
    padding: 0 2em 1em;
    overflow-y: auto;
    box-shadow:
      0 10px 10px -5px rgba(0, 0, 0, 0.2),
      0 2px 2px 0 rgba(0, 0, 0, 0.1);
    border-bottom-right-radius: var(--pagefind-ui-border-radius);
    border-bottom-left-radius: var(--pagefind-ui-border-radius);
    background-color: var(--pagefind-ui-background);
  }

  .pagefind-ui .pagefind-ui__result-link {
    color: var(--pagefind-ui-primary);
  }

  .pagefind-ui .pagefind-ui__result-excerpt {
    color: var(--pagefind-ui-text);
  }
  .pagefind-ui .pagefind-ui__filter-panel {
    @apply !hidden lg:!flex;
  }
</style>
