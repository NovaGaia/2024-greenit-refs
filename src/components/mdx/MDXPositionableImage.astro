---
import ResponsiveImage from "@components/ResponsiveImage.astro";
import type { ImageMetadata } from "astro";
import { Icon } from "astro-icon/components";
import { Picture, getImage } from "astro:assets";
const props: any = Astro.props;

const images = import.meta.glob<{ default: ImageMetadata }>(
  "/src/assets/**/*.{jpeg,jpg,png,gif,svg}",
);
if (!images[props.src])
  throw new Error(
    `"${props.src}" does not exist in glob: "src/assets/**/*.{jpeg,jpg,png,gif,svg}"`,
  );
const unZoomedImage = await getImage({
  src: images[props.src](),
  format: "webp",
});
---

<figure
  class:list={[
    {
      "float-left mr-2 pb-2": props.position === "float-left",
      "float-right ml-2 pb-2": props.position === "float-right",
      "mx-auto block pb-2": props.position === "block",
    },
    {
      "w-auto": props.imgWidth === "auto",
      "w-full": props.imgWidth === "fullWidth",
      "w-full md:w-2/3": props.imgWidth === "twoThirdWidth",
      "w-full md:w-1/2": props.imgWidth === "halfWidth",
      "w-full md:w-1/3": props.imgWidth === "thirdWidth",
      "w-full md:w-1/4": props.imgWidth === "quarterWidth",
    },
  ]}
>
  {
    props.zoomable ? (
      <a
        href={unZoomedImage?.src || ""}
        target="_blank"
        class="group relative inline-block"
      >
        <Picture
          src={images[props.src]()}
          formats={["avif", "webp"]}
          width={props.width || 600}
          height={props.height || 400}
          alt={props.alt || `Undefined`}
          title={props.title || ``}
          class:list={[`mx-auto`, props.class]}
        />
        <span class="absolute bottom-0 right-0 m-2 rounded-lg bg-black bg-opacity-25 p-1 group-hover:bg-opacity-50">
          <Icon name="tabler:zoom-scan" size={24} class="text-white" />
        </span>
      </a>
    ) : (
      <Picture
        src={images[props.src]()}
        formats={["avif", "webp"]}
        width={props.width || 600}
        height={props.height || 400}
        alt={props.alt || `Undefined`}
        title={props.title || ``}
        class:list={[`mx-auto`, props.class]}
      />
    )
  }
  {
    props.caption && (
      <figcaption class="block text-center text-xs italic">
        {props.caption}
      </figcaption>
    )
  }
  <!-- <ResponsiveImage
  src={images[props.src]()}
  alt={props.alt || `Undefined`}
  sizes={[400, 600, 800, 1000, 1200, 1400, 1600]}
  format="webp"
/> -->
</figure>
